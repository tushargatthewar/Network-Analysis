{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport useBadge from './useBadge';\nimport { getBadgeUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUtilityClass, undefined);\n};\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n      component,\n      children,\n      className,\n      components = {},\n      componentsProps = {},\n      max: maxProp = 99,\n      showZero = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || components.Root || 'span';\n  const rootProps = appendOwnerState(Root, _extends({}, other, componentsProps.root), ownerState);\n  const Badge = components.Badge || 'span';\n  const badgeProps = appendOwnerState(Badge, componentsProps.badge, ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool\n} : void 0;\nexport default BadgeUnstyled;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","composeClasses","appendOwnerState","useBadge","getBadgeUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","invisible","slots","root","badge","undefined","BadgeUnstyled","forwardRef","props","ref","component","children","className","components","componentsProps","max","maxProp","showZero","other","badgeContent","displayValue","classes","Root","rootProps","Badge","badgeProps","process","env","NODE_ENV","propTypes","node","string","elementType","shape","object","bool","number"],"sources":["C:/Users/hp/Downloads/Blockchain-master/Blockchain-master/frontend/node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"badgeContent\", \"component\", \"children\", \"className\", \"components\", \"componentsProps\", \"invisible\", \"max\", \"showZero\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '../composeClasses';\nimport appendOwnerState from '../utils/appendOwnerState';\nimport useBadge from './useBadge';\nimport { getBadgeUtilityClass } from './badgeUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    invisible\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', invisible && 'invisible']\n  };\n  return composeClasses(slots, getBadgeUtilityClass, undefined);\n};\n\nconst BadgeUnstyled = /*#__PURE__*/React.forwardRef(function BadgeUnstyled(props, ref) {\n  const {\n    component,\n    children,\n    className,\n    components = {},\n    componentsProps = {},\n    max: maxProp = 99,\n    showZero = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    badgeContent,\n    max,\n    displayValue,\n    invisible\n  } = useBadge(_extends({}, props, {\n    max: maxProp\n  }));\n\n  const ownerState = _extends({}, props, {\n    badgeContent,\n    invisible,\n    max,\n    showZero\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const Root = component || components.Root || 'span';\n  const rootProps = appendOwnerState(Root, _extends({}, other, componentsProps.root), ownerState);\n  const Badge = components.Badge || 'span';\n  const badgeProps = appendOwnerState(Badge, componentsProps.badge, ownerState);\n  return /*#__PURE__*/_jsxs(Root, _extends({}, rootProps, {\n    ref: ref\n  }, other, {\n    className: clsx(classes.root, rootProps.className, className),\n    children: [children, /*#__PURE__*/_jsx(Badge, _extends({}, badgeProps, {\n      className: clsx(classes.badge, badgeProps.className),\n      children: displayValue\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? BadgeUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.object,\n    root: PropTypes.object\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool\n} : void 0;\nexport default BadgeUnstyled;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}